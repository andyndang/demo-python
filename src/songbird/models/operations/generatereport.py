"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import adminreportresponse as shared_adminreportresponse
from ..shared import adminreporttimeperiod as shared_adminreporttimeperiod
from ..shared import adminreporttype as shared_adminreporttype
from typing import Optional



@dataclasses.dataclass
class GenerateReportSecurity:
    api_key_auth: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'apiKey', 'sub_type': 'header', 'field_name': 'X-API-Key' }})
    




@dataclasses.dataclass
class GenerateReportRequest:
    report_type: shared_adminreporttype.AdminReportType = dataclasses.field(metadata={'query_param': { 'field_name': 'report_type', 'style': 'form', 'explode': True }})
    r"""A type of admin report."""
    time_period: shared_adminreporttimeperiod.AdminReportTimePeriod = dataclasses.field(metadata={'query_param': { 'field_name': 'time_period', 'style': 'form', 'explode': True }})
    r"""A time period for the admin report."""
    




@dataclasses.dataclass
class GenerateReportResponse:
    content_type: str = dataclasses.field()
    status_code: int = dataclasses.field()
    admin_report_response: Optional[shared_adminreportresponse.AdminReportResponse] = dataclasses.field(default=None)
    r"""GenerateReport default response"""
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)
    

