"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import getaccountusersresponse as shared_getaccountusersresponse
from typing import Optional



@dataclasses.dataclass
class GetAccountUsersSecurity:
    api_key_auth: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'apiKey', 'sub_type': 'header', 'field_name': 'X-API-Key' }})
    




@dataclasses.dataclass
class GetAccountUsersRequest:
    org_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'org_id', 'style': 'simple', 'explode': False }})
    email: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'email', 'style': 'form', 'explode': True }})
    user_id: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'user_id', 'style': 'form', 'explode': True }})
    




@dataclasses.dataclass
class GetAccountUsersResponse:
    content_type: str = dataclasses.field()
    status_code: int = dataclasses.field()
    get_account_users_response: Optional[shared_getaccountusersresponse.GetAccountUsersResponse] = dataclasses.field(default=None)
    r"""GetAccountUsers default response"""
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)
    

