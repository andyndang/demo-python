"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import patchaccountmembershipsrequest as shared_patchaccountmembershipsrequest
from ..shared import void as shared_void
from dataclasses_json import Undefined, dataclass_json
from songbird import utils
from typing import Optional



@dataclasses.dataclass
class PatchOrgRoleMembershipsSecurity:
    api_key_auth: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'apiKey', 'sub_type': 'header', 'field_name': 'X-API-Key' }})
    



@dataclass_json(undefined=Undefined.EXCLUDE)

@dataclasses.dataclass
class PatchOrgRoleMembershipsRequestBody:
    request: Optional[shared_patchaccountmembershipsrequest.PatchAccountMembershipsRequest] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('request'), 'exclude': lambda f: f is None }})
    r"""Request for the PatchOrgRoleMemberships API"""
    




@dataclasses.dataclass
class PatchOrgRoleMembershipsRequest:
    managed_org_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'managed_org_id', 'style': 'simple', 'explode': False }})
    org_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'org_id', 'style': 'simple', 'explode': False }})
    request_body: PatchOrgRoleMembershipsRequestBody = dataclasses.field(metadata={'request': { 'media_type': 'application/json' }})
    role: str = dataclasses.field(metadata={'path_param': { 'field_name': 'role', 'style': 'simple', 'explode': False }})
    




@dataclasses.dataclass
class PatchOrgRoleMembershipsResponse:
    content_type: str = dataclasses.field()
    status_code: int = dataclasses.field()
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)
    void: Optional[shared_void.Void] = dataclasses.field(default=None)
    r"""PatchOrgRoleMemberships default response"""
    

