"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ...models.shared import asynclogresponse as shared_asynclogresponse
from ...models.shared import transactionlogrequest as shared_transactionlogrequest
from typing import Optional


@dataclasses.dataclass
class LogTransactionRequest:
    transaction_id: str = dataclasses.field(metadata={'query_param': { 'field_name': 'transaction_id', 'style': 'form', 'explode': True }})
    transaction_log_request: shared_transactionlogrequest.TransactionLogRequest = dataclasses.field(metadata={'request': { 'media_type': 'application/json' }})
    



@dataclasses.dataclass
class LogTransactionResponse:
    content_type: str = dataclasses.field()
    r"""HTTP response content type for this operation"""
    raw_response: requests_http.Response = dataclasses.field()
    r"""Raw HTTP response; suitable for custom response parsing"""
    status_code: int = dataclasses.field()
    r"""HTTP response status code for this operation"""
    async_log_response: Optional[shared_asynclogresponse.AsyncLogResponse] = dataclasses.field(default=None)
    r"""LogTransaction default response"""
    

