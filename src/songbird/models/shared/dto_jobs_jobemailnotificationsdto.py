"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from songbird import utils
from typing import List, Optional


@dataclasses.dataclass
class OnFailure:
    pass


@dataclasses.dataclass
class OnStart:
    pass


@dataclasses.dataclass
class OnSuccess:
    pass


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class DTOJobsJobEmailNotificationsDTO:
    no_alert_for_skipped_runs: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('noAlertForSkippedRuns'), 'exclude': lambda f: f is None }})
    on_failure: Optional[List[OnFailure]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('onFailure'), 'exclude': lambda f: f is None }})
    on_start: Optional[List[OnStart]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('onStart'), 'exclude': lambda f: f is None }})
    on_success: Optional[List[OnSuccess]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('onSuccess'), 'exclude': lambda f: f is None }})
    

